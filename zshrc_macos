export PATH="$PATH:/Library/TeX/texbin"
#export PATH="$(brew --prefix coreutils)/libexec/gnubin:/usr/local/bin:$PATH"
export PATH="$HOME/.rbenv/bin:$HOME/.rbenv/shims:$PATH"
#export PATH="$HOME/.gem/ruby/2.7.0/bin:$PATH"


# ssh tunnel at port 10000 to nccu for jupyterlab
alias tunnelnccu='ssh -t -CNL 10000:localhost:10000 nccu'
function jupyternccu() {
  ssh -t -CL 10000:localhost:10000 nccu ". ~/.zshrc ; jupyter lab --no-browser --port=10000"
}

# RIKEN Library proxy toggler. Proxy file must be installed.
# Usage: rikenproxy status/on/off
rikenproxy () {
  if [[ $# -ne 1 ]]; then
    echo 'error: rikenproxy needs one argument: status/on/off'
    return 1
  fi
  if [[ "$1" == "status" ]]; then
    networksetup -getautoproxyurl Wi-Fi
  elif [[ "$1" == "on" ]]; then
    networksetup -setautoproxystate Wi-Fi on
  elif [[ "$1" == "off" ]]; then
    networksetup -setautoproxystate Wi-Fi off
  else
    echo 'error: rikenproxy needs one argument: status/on/off'
    return 1
  fi
}


# Usage: rec HOSTNAME FILE_OR_DIR1 [FILE_OR_DIR2 ...]
# This will copy newer files /PWD/FILE_OR_DIR1, etc.,
# from the server to become local files /PWD/FILE_OR_DIR1, etc.
function rec() {
 
  if [[ $# -lt 2 ]]; then
    echo 'Usage: rec HOSTNAME FILE_OR_DIR1 [FILE_OR_DIR2 ...]'
    return 1
  fi
 
  pwd=$(dirs)
  args=( "${@:2}" )
  files=()
  for arg in "${args[@]}"; do
    files+=("$pwd/${arg%/}")
  done
 
  echo -n "receive ${args[@]%/} from $1:$pwd/ (y/n/all)? "
  read a;
  if [[ "$a" == "y" ]]; then
    rsync -avzhu --progress \
      --exclude="*/.DS_Store" \
      --exclude="*/.*.swp" \
      --exclude="*/.unison" \
      --exclude="*/.ipynb_checkpoints" \
      --exclude="*/.git" \
      --exclude="*/compile.sh" \
      --exclude="*/*.dat" \
      --exclude="*/*.dat.gz" \
      "$1:${files[*]}" "$PWD"
  elif [[ "$a" == "all" ]]; then
    rsync -avzhu --progress \
      --exclude="*/.DS_Store" \
      --exclude="*/.*.swp" \
      --exclude="*/.unison" \
      --exclude="*/.ipynb_checkpoint" \
      --exclude="*/.git" \
      "$1:${files[*]}" "$PWD"
  fi  
 
}
 
function send() {
 
  if [[ $# -lt 2 ]]; then
    echo 'Usage: send HOSTNAME FILE_OR_DIR1 [FILE_OR_DIR2 ...]'
    return 1
  fi  
 
  pwd=$(dirs)
  args=( "${@:2}" )
  files=( "${args[@]%/}" )
 
  echo -n "send $files to $1:$pwd/ (y/n/all)? "
  read a;
  if [[ "$a" == "y" ]]; then
    rsync -avzhu --progress \
      --exclude="*/.DS_Store" \
      --exclude="*/.*.swp" \
      --exclude="*/.unison" \
      --exclude="*/compile.sh" \
      --exclude="*/*.dat" \
      --exclude="*/*.dat.gz" \
      "${files[@]}" "$1:$pwd"
  elif [[ "$a" == "all" ]]; then
    rsync -avzhu --progress \
      --exclude="*/.DS_Store" \
      --exclude="*/.*.swp" \
      --exclude="*/.unison" \
      "${files[@]}" "$1:$pwd"
  fi  
 
}



alias preview='open -a "Preview"'
alias quicktime='open -a "QuickTime Player"'
alias finder='open -a "Finder"'
alias mathematica='open -a "Mathematica"'
alias mvim='open -a "MacVim"'
alias math='/Applications/Mathematica.app/Contents/MacOS/MathKernel'
alias mathnb='~/Library/Mathematica/Applications/MyShellNotebook.sh'
#alias gcc='/usr/local/bin/gcc-7'


eval "$(rbenv init -)"
eval "$(pyenv init --path)"
